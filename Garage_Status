#!/bin/bash

# Garage Log process started - Write today's date to log files
# Using -printf- command to print line break to visualize reboot in log 
#   - Alternatively, you can uncomment the following two lines to start new logs on every reboot

# rm /usr/share/webiopi/htdocs/garage.log
# rm /var/log/garage.log

printf "\nPennyPupster Tracker started at " >> /var/log/garage.log
date >> /var/log/garage.log

printf "\nPennyPupster Tracker started at " >> /usr/share/webiopi/htdocs/garage.log
date >> /usr/share/webiopi/htdocs/garage.log

# GPIO 18 is used as the door sensor. Must be changed in two places if different (Lines 17 & 26)
echo "18" > /sys/class/gpio/export

# Loop this whole script
while true

do
# Assign the previous value (stored in file /usr/bin/garage_state) & get the current status of GPIO pin
# Make sure to update GPIO value to the door sensor
STATE_PRV=$(</usr/bin/garage_state)
STATE_CUR=$(</sys/class/gpio/gpio18/value)

# ====================================
# STATE_TEXT > go   = open
# STATE_TEXT > stay = closed

if [ $STATE_CUR = 1 ]
then
       STATE_TEXT='GO'
else
       STATE_TEXT='STAY'
fi

# ====================================
if [ "$STATE_PRV" = "$STATE_CUR" ]
then
       sleep 5
else
       date >> /var/log/garage.log
       echo "PennyPupster Tracker " $STATE_CUR >> /var/log/garage.log
       echo " 1=Open, 0=Closed" >> /var/log/garage.log

       STR1=$(date +%F)" "$(date +%R)
       echo $STR1 "PENNY is" $STATE_TEXT >> /usr/share/webiopi/htdocs/garage.log

       echo $STATE_CUR > /usr/bin/garage_state
fi
       date

done
